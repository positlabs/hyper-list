/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface HyperList {
    'afterRender': Function;
    'applyPatch': Function;
    /**
    * Wire up the data to the index. The index is then mapped to a Y position in the container, using some height.   generate(index) {     const el = document.createElement('div');     el.innerHTML = `ITEM ${index + 1}`;     return { element: el, height: Math.random() * 1000 };   }
    */
    'generate': Function;
    'height': number;
    'horizontal': boolean;
    'itemHeight': number;
    'items': any[];
    'overrideScrollPosition': boolean;
    'reverse': boolean;
    'rowClassName': string;
    'scroller': HTMLElement;
    'scrollerTagName': string;
    'useFragment': boolean;
    'width': number;
  }
}

declare global {


  interface HTMLHyperListElement extends Components.HyperList, HTMLStencilElement {}
  var HTMLHyperListElement: {
    prototype: HTMLHyperListElement;
    new (): HTMLHyperListElement;
  };
  interface HTMLElementTagNameMap {
    'hyper-list': HTMLHyperListElement;
  }
}

declare namespace LocalJSX {
  interface HyperList extends JSXBase.HTMLAttributes<HTMLHyperListElement> {
    'afterRender'?: Function;
    'applyPatch'?: Function;
    /**
    * Wire up the data to the index. The index is then mapped to a Y position in the container, using some height.   generate(index) {     const el = document.createElement('div');     el.innerHTML = `ITEM ${index + 1}`;     return { element: el, height: Math.random() * 1000 };   }
    */
    'generate'?: Function;
    'height'?: number;
    'horizontal'?: boolean;
    'itemHeight'?: number;
    'items'?: any[];
    'overrideScrollPosition'?: boolean;
    'reverse'?: boolean;
    'rowClassName'?: string;
    'scroller'?: HTMLElement;
    'scrollerTagName'?: string;
    'useFragment'?: boolean;
    'width'?: number;
  }

  interface IntrinsicElements {
    'hyper-list': HyperList;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


